import numpy as np
import matplotlib.pyplot as plt

# Example data (replace with your actual data)
angle = np.linspace(10, 50, 100)  # 2θ values
intensity = np.random.normal(5000, 1000, 100)  # Simulated intensity data

# Add a fake baseline drift for demonstration
intensity += 100 * (angle - 10)  # Simulated baseline drift

# Linear baseline correction
coefficients = np.polyfit(angle, intensity, 1)  # Fit a straight line
baseline = np.polyval(coefficients, angle)  # Calculate baseline
corrected_intensity = intensity - baseline  # Subtract baseline

# Plot original and corrected data
plt.figure(figsize=(10, 6))
plt.plot(angle, intensity, label="Original Data", color="blue")
plt.plot(angle, baseline, label="Baseline", color="red", linestyle="--")
plt.plot(angle, corrected_intensity, label="Corrected Data", color="green")
plt.xlabel("2θ (degrees)")
plt.ylabel("Intensity (a.u.)")
plt.title("XRD Data with Linear Baseline Correction")
plt.legend()
plt.grid(True)
plt.show()